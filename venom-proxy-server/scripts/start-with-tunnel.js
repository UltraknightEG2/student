const { spawn } = require('child_process');
const fs = require('fs-extra');
const path = require('path');

async function startWithTunnel() {
  console.log('๐ ุจุฏุก ุชุดุบูู Venom Proxy ูุน Cloudflare Tunnel...');
  
  // ุงูุชุญูู ูู ูุฌูุฏ cloudflared
  try {
    const { execSync } = require('child_process');
    execSync('cloudflared version', { stdio: 'pipe' });
    console.log('โ cloudflared ูุชููุฑ');
  } catch (error) {
    console.log('โ cloudflared ุบูุฑ ูุซุจุช');
    console.log('๐ก ูุชุซุจูุช cloudflared:');
    console.log('   Windows: winget install --id Cloudflare.cloudflared');
    console.log('   macOS: brew install cloudflare/cloudflare/cloudflared');
    console.log('   Linux: https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/installation/');
    process.exit(1);
  }
  
  // ุจุฏุก ุชุดุบูู Venom Proxy
  console.log('๐ ุจุฏุก ุชุดุบูู Venom Proxy...');
  const venomProcess = spawn('npm', ['start'], {
    stdio: 'inherit',
    shell: true
  });
  
  // ุงูุชุธุงุฑ ูููู ูุจุฏุก ุงูุฎุงุฏู
  await new Promise(resolve => setTimeout(resolve, 5000));
  
  // ุจุฏุก ุชุดุบูู Cloudflare Tunnel
  console.log('๐ ุจุฏุก ุชุดุบูู Cloudflare Tunnel...');
  const tunnelProcess = spawn('cloudflared', [
    'tunnel',
    'run',
    '--url',
    'http://localhost:3002',
    'attendance-venom'
  ], {
    stdio: 'inherit',
    shell: true
  });
  
  // ูุนุงูุฌุฉ ุฅุบูุงู ุงูุนูููุงุช
  process.on('SIGINT', () => {
    console.log('\n๐ ุฅููุงู ุงูุนูููุงุช...');
    venomProcess.kill('SIGINT');
    tunnelProcess.kill('SIGINT');
    process.exit(0);
  });
  
  process.on('SIGTERM', () => {
    console.log('\n๐ ุฅููุงู ุงูุนูููุงุช...');
    venomProcess.kill('SIGTERM');
    tunnelProcess.kill('SIGTERM');
    process.exit(0);
  });
  
  venomProcess.on('exit', (code) => {
    console.log(`๐ด Venom Proxy ุชููู ุจููุฏ: ${code}`);
    tunnelProcess.kill();
    process.exit(code);
  });
  
  tunnelProcess.on('exit', (code) => {
    console.log(`๐ด Cloudflare Tunnel ุชููู ุจููุฏ: ${code}`);
    venomProcess.kill();
    process.exit(code);
  });
  
  console.log('โ ุชู ุชุดุบูู ุงููุธุงู ุจูุฌุงุญ!');
  console.log('๐ฑ ุงูุณุญ QR Code ุงูุฐู ุณูุธูุฑ ูุฑุจุท ุงููุงุชุณุงุจ');
  console.log('๐ ุงูุฎุงุฏู ูุชุงุญ ุนูู: https://api.go4host.net');
}

if (require.main === module) {
  startWithTunnel().catch(console.error);
}

module.exports = startWithTunnel;